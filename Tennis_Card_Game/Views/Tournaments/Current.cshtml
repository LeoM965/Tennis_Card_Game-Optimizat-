@using Tennis_Card_Game.ViewModel
@model System.Collections.Generic.IEnumerable<Tennis_Card_Game.ViewModel.TournamentViewModel>
@{
    ViewData["Title"] = "Current Tournaments";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1 class="display-4">
                <span class="text-primary">🏆</span> Current Tournaments
            </h1>
            <p class="lead">Active tournaments happening right now.</p>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <h4 class="alert-heading">No active tournaments</h4>
            <p>There are no tournaments currently in progress. Check back later or view all tournaments.</p>
            <hr>
            <p class="mb-0">
                <a asp-action="Index" class="btn btn-outline-primary">View All Tournaments</a>
            </p>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (TournamentViewModel tournament in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">@tournament.Name</h5>
                            <span class="badge bg-light text-dark">@tournament.Level</span>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <span class="badge bg-info text-dark">Surface: @tournament.Surface</span>
                            </div>
                            <p>
                                <strong>Progress:</strong>
                                @{
                                    double totalSeconds = Math.Max(1, tournament.EndTime.TotalSeconds - tournament.StartTime.TotalSeconds);
                                    double secondsPassed = Math.Max(0, DateTime.Now.TimeOfDay.TotalSeconds - tournament.StartTime.TotalSeconds);
                                    int progressPercentage = Math.Min(100, Math.Max(0, (int)(secondsPassed / totalSeconds * 100)));
                                }
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar"
                                         style="width: @(progressPercentage)%"
                                         aria-valuenow="@progressPercentage" aria-valuemin="0" aria-valuemax="100">
                                        @progressPercentage%
                                    </div>
                                </div>
                            </p>
                            <p><strong>Timing:</strong> @tournament.StartTime.ToString(@"hh\:mm") - @tournament.EndTime.ToString(@"hh\:mm")</p>
                            <p><strong>Matches:</strong> @tournament.MatchCount</p>
                            <p><strong>Rewards:</strong> @tournament.XpReward XP | @tournament.CoinReward Coins</p>

                            <h6 class="mt-3">Recent Matches</h6>
                            <ul class="list-group list-group-flush">
                                @foreach (var match in tournament.Matches.OrderByDescending(m => m.StartTime).Take(3))
                                {
                                    <li class="list-group-item p-2 @(match.IsCompleted ? "bg-light" : "")">
                                        <div class="d-flex justify-content-between">
                                            <small>@(string.IsNullOrEmpty(match.Player1Name) ? "Unknown" : match.Player1Name) vs @(string.IsNullOrEmpty(match.Player2Name) ? "Unknown" : match.Player2Name)</small>
                                            @if (match.IsCompleted)
                                            {
                                                <small class="text-muted">@match.Player1Sets - @match.Player2Sets</small>
                                            }
                                            else
                                            {
                                                <small class="badge bg-warning text-dark">Upcoming</small>
                                            }
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="card-footer bg-white">
                            <div class="d-grid">
                                <a asp-action="Details" asp-route-id="@tournament.Id" class="btn btn-outline-primary">View Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>